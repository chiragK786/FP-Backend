{
	"info": {
		"_postman_id": "45df8769-cfb6-47b2-b7e5-e836e9eadff8",
		"name": "1.Recruiter",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26967474",
		"_collection_link": "https://interstellar-robot-975120.postman.co/workspace/DDT-API~ea03afb9-9c51-416f-9dd2-c08d09faf8a0/collection/26967474-45df8769-cfb6-47b2-b7e5-e836e9eadff8?action=share&creator=26967474&source=collection_link"
	},
	"item": [
		{
			"name": "Recruiter",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"",
									"var recEmail = pm.iterationData.get(\"recEmail\")",
									"var pwdrec = pm.iterationData.get(\"pwdrec\");",
									"",
									"",
									"",
									"pm.globals.set(\"recEmail\",recEmail);",
									"pm.globals.set(\"pwdrec\",pwdrec);",
									"",
									"",
									"",
									"",
									"var fnamerec = pm.variables.replaceIn('{{$randomFirstName}}');",
									"pm.collectionVariables.set(\"fnamerec\",fnamerec)",
									"// console.log(fnameapp)",
									"var lnamerec = pm.variables.replaceIn('{{$randomLastName}}');",
									"pm.collectionVariables.set(\"lnamerec\",lnamerec)",
									"// console.log(lnameapp)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{recEmail}}\",\n    \"firstName\": \"{{fnamerec}}\",\n    \"lastName\": \"{{lnamerec}}\",\n    \"password\": \"{{pwdrec}}\",\n    \"confirmPassword\": \"{{pwdrec}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/api/v1/auth/recruiter/register",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"recruiter",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json();",
									"var recToken = json.data.token",
									"",
									"pm.globals.set(\"recToken\", recToken);",
									"",
									"var rec = pm.globals.get(\"recID\");",
									"",
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"{{recEmail}}\",\n    \"password\":\"{{pwdrec}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/api/v1/auth/recruiter/login",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"recruiter",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var json = pm.response.json();",
									"var recjob = json.data.id",
									"",
									"pm.globals.set(\"recjobID\", recjob);",
									"",
									"console.log(recjob)",
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{recToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"{{$randomJobTitle}}\",\n    \"description\" : \"{{$randomJobArea}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/api/v1/jobs/recruiter",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"recruiter"
							]
						}
					},
					"response": []
				},
				{
					"name": "View posted jobs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var job = pm.collectionVariables.get(\"recjobID\");",
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{recToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/api/v1/jobs/recruiter?perPage=2",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"recruiter"
							],
							"query": [
								{
									"key": "perPage",
									"value": "2"
								},
								{
									"key": "description",
									"value": "software",
									"disabled": true
								},
								{
									"key": "title",
									"value": "QA",
									"disabled": true
								},
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "q",
									"value": "QA",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "View applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{recToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/api/v1/applications/recruiter?include=applications",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"applications",
								"recruiter"
							],
							"query": [
								{
									"key": "sort",
									"value": "title:asc",
									"disabled": true
								},
								{
									"key": "include",
									"value": "applications"
								},
								{
									"key": "id",
									"value": "01H2X8YWM5X2C1V2289WA14775",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ujob = pm.iterationData.get(\"ujobtitle\")",
									"pm.globals.set(\"ujobtitle\",ujob)",
									"",
									"var udescription = pm.iterationData.get(\"udesc\")",
									"pm.globals.set(\"udesc\",udescription)",
									"",
									"//here U is for update "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Miwicm9sZSI6MiwicGFzc3dvcmRDaGFuZ2VkQXQiOm51bGwsImlhdCI6MTY4NjY1MjI3NSwiZXhwIjoxNjg2OTExNDc1fQ.QB_M5KtnOR9o-PZxOkfZQlPuT8NT2F3_jzqGOpqS9xI",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"{{$randomJobTitle}}\",\n    \"description\" : \"{{$randomJobArea}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/api/v1/jobs/recruiter/{{recjobID}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"recruiter",
								"{{recjobID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Job",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{recToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/api/v1/jobs/recruiter/{{recjobID}}",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"jobs",
								"recruiter",
								"{{recjobID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"recruiter@sqb.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/api/v1/auth/recruiter/forgot-password",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"recruiter",
								"forgot-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"verify success is true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Response time is less than 2000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secret\":\"2ui0aeglrdi\",\n    \"newPassword\":\"password@123\",\n    \"confirmPassword\":\"password@123\",\n    \"email\":\"recruiter@sqb.com\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseurl}}/api/v1/auth/recruiter/reset-password",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"recruiter",
								"reset-password"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "recEmail",
			"value": ""
		},
		{
			"key": "pwdrec",
			"value": ""
		},
		{
			"key": "fnamerec",
			"value": ""
		},
		{
			"key": "lnamerec",
			"value": ""
		},
		{
			"key": "recID",
			"value": ""
		},
		{
			"key": "recToken",
			"value": ""
		}
	]
}